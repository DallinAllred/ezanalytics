version: '3.8'

services:
  # Vue.js application
  vue:
    image: node:21
    working_dir: /app
    container_name: vue_eza_container
    volumes:
      - ./ezanalytics-vue:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    ports:
      - "8080:8080"
    networks:
      - analytics_network

  # Nginx as a reverse proxy for Vue.js and FastAPI
  nginx:
    # build: ./nginx
    image: nginx:latest
    container_name: nginx_eza_container
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - vue
      - fastapi
    networks:
      - analytics_network

  # FastAPI
  fastapi:
    build:
      context: ./fastapi
    container_name: fastapi_eza_container
    ports:
      - 5050:5050
    volumes:
      - ./fastapi:/app
    depends_on:
      - postgres
      - redis
      - mongo
    networks:
      - analytics_network
    # image: tiangolo/uvicorn-gunicorn-fastapi:python3.8
    # ports:
    #   - "8000:80"

  # PostgreSQL
  postgres:
    build:
      context: ./postgres
    container_name: postgres_eza_container
    # image: postgres:latest
    # environment:
    #   POSTGRES_DB: mydatabase
    #   POSTGRES_USER: myuser
    #   POSTGRES_PASSWORD: mypassword
    expose:
      - "5432"
    volumes:
      - postgres-data:/data
    networks:
      - analytics_network

  # Redis
  redis:
    image: redis:latest
    container_name: redis_eza_container
    command: redis-server
    expose:
      - "6379"
    volumes:
      - redis-data:/data
      - redis-conf:/usr/local/etc/redis/redis.conf
    networks:
      - analytics_network

  # MongoDB
  mongo:
    image: mongo:latest
    container_name: mongo_eza_container
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    expose:
      - "27017"
    networks:
      - analytics_network

networks:
  analytics_network:

volumes:
  postgres-data:
  redis-data:
  redis-conf:
  ezanalytics-vue:
  fastapi:
